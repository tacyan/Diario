#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Êó•Ë®ò„Ç´„Éº„Éâ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„É¢„Ç∏„É•„Éº„É´

„Åì„ÅÆ„É¢„Ç∏„É•„Éº„É´„ÅØ„ÄÅÊó•Ë®ò„Ç®„É≥„Éà„É™„Éº„ÇíË°®Á§∫„Åô„Çã„Åü„ÇÅ„ÅÆ„Ç´„Éº„Éâ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÇíÊèê‰æõ„Åó„Åæ„Åô„ÄÇ
ÂêÑÊó•Ë®ò„Ç®„É≥„Éà„É™„Éº„ÅÆ„Éó„É¨„Éì„É•„ÉºË°®Á§∫„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ

‰ΩúÊàêËÄÖ: Claude AI
„Éê„Éº„Ç∏„Éß„É≥: 1.0.0
"""

import flet as ft
import datetime

class DiaryCard(ft.Card):
    """
    Êó•Ë®ò„Ç®„É≥„Éà„É™„Éº„ÇíË°®Á§∫„Åô„Çã„Ç´„Éº„Éâ„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÄÇ
    „Éõ„Éº„É†ÁîªÈù¢„ÇÑ„Ç´„É¨„É≥„ÉÄ„Éº„Éì„É•„Éº„Åß„Ç®„É≥„Éà„É™„Éº„ÅÆ„Éó„É¨„Éì„É•„Éº„ÇíË°®Á§∫„Åó„Åæ„Åô„ÄÇ
    """
    
    def __init__(self, entry, on_click=None):
        """
        DiaryCard„ÇØ„É©„Çπ„ÅÆ„Ç≥„É≥„Çπ„Éà„É©„ÇØ„Çø„ÄÇ
        
        Args:
            entry: Ë°®Á§∫„Åô„ÇãÊó•Ë®ò„Ç®„É≥„Éà„É™„Éº„Ç™„Éñ„Ç∏„Çß„ÇØ„Éà
            on_click: „Ç´„Éº„Éâ„Åå„ÇØ„É™„ÉÉ„ÇØ„Åï„Çå„Åü„Å®„Åç„ÅÆ„Ç≥„Éº„É´„Éê„ÉÉ„ÇØÈñ¢Êï∞
        """
        super().__init__()
        
        self.entry = entry
        self.on_click = on_click
        
        # Ê∞óÂàÜ„Å´ÂØæÂøú„Åô„ÇãÁµµÊñáÂ≠ó
        self.mood_emojis = {
            1: "üòû",
            2: "üòï",
            3: "üòê",
            4: "üôÇ",
            5: "üòÑ"
        }
        
        # „Ç´„Éº„Éâ„ÅÆÂÜÖÂÆπ„ÇíÊßãÁØâ
        self._build_card()
    
    def _build_card(self):
        """
        „Ç´„Éº„Éâ„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÊßãÁØâ„Åó„Åæ„Åô„ÄÇ
        """
        # „Çø„Ç§„Éà„É´„Å®Êó•‰ªò
        title_text = self.entry.title if self.entry.title else "ÁÑ°È°å„ÅÆÊó•Ë®ò"
        
        # Êó•‰ªò„ÅÆË°®Á§∫ÂΩ¢Âºè
        date_obj = self.entry.created_at
        today = datetime.datetime.now().date()
        yesterday = today - datetime.timedelta(days=1)
        
        if date_obj.date() == today:
            date_str = "‰ªäÊó•"
        elif date_obj.date() == yesterday:
            date_str = "Êò®Êó•"
        else:
            date_str = f"{date_obj.year}Âπ¥{date_obj.month}Êúà{date_obj.day}Êó•"
        
        time_str = f"{date_obj.hour:02d}:{date_obj.minute:02d}"
        
        # Êú¨Êñá„ÅÆ„Éó„É¨„Éì„É•„Éº
        # ÊúÄÂ§ß100ÊñáÂ≠ó„Åæ„ÅßË°®Á§∫„Åó„ÄÅ„Åù„Çå‰ª•‰∏ä„ÅØ„Äå...„Äç„ÅßÁúÅÁï•
        content_preview = self.entry.content[:100] + ("..." if len(self.entry.content) > 100 else "")
        
        # Ê∞óÂàÜ„ÅÆÁµµÊñáÂ≠ó
        mood_emoji = self.mood_emojis.get(self.entry.mood, "üòê")
        
        # „Çø„Ç∞„ÅÆ„ÉÅ„ÉÉ„Éó
        tag_chips = []
        for tag in self.entry.tags[:3]:  # ÊúÄÂàù„ÅÆ3„Å§„ÅÆ„Çø„Ç∞„ÅÆ„ÅøË°®Á§∫
            tag_chips.append(
                ft.Chip(
                    label=ft.Text(tag),
                    leading=ft.Icon(ft.icons.TAG),
                )
            )
        
        # „Çø„Ç∞„Åå3„Å§‰ª•‰∏ä„ÅÇ„ÇãÂ†¥Âêà„ÅØ„Äå+n„Äç„ÇíË°®Á§∫
        if len(self.entry.tags) > 3:
            tag_chips.append(
                ft.Chip(
                    label=ft.Text(f"+{len(self.entry.tags) - 3}"),
                )
            )
        
        # „É°„Éá„Ç£„Ç¢„ÅÆÊï∞„ÇíË°®Á§∫„Åô„Çã„Ç¢„Ç§„Ç≥„É≥
        media_indicator = None
        if self.entry.media:
            media_count = len(self.entry.media)
            media_indicator = ft.Row([
                ft.Icon(ft.icons.IMAGE),
                ft.Text(f"{media_count}")
            ], spacing=2)
        
        # „Ç´„Éº„Éâ„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ
        self.content = ft.Container(
            content=ft.Column([
                # „Éò„ÉÉ„ÉÄ„ÉºÈÉ®ÂàÜÔºà„Çø„Ç§„Éà„É´„ÄÅÊó•‰ªò„ÄÅÊ∞óÂàÜÔºâ
                ft.Row([
                    ft.Column([
                        ft.Text(
                            title_text,
                            size=16,
                            weight=ft.FontWeight.BOLD,
                            overflow=ft.TextOverflow.ELLIPSIS,
                        ),
                        ft.Text(
                            f"{date_str} {time_str}",
                            size=12,
                            weight=ft.FontWeight.W_400,
                            color=ft.colors.ON_SURFACE_VARIANT,
                        ),
                    ], expand=True),
                    ft.Text(
                        mood_emoji,
                        size=24,
                    ),
                ]),
                
                # Âå∫Âàá„ÇäÁ∑ö
                ft.Divider(height=1, color=ft.colors.OUTLINE_VARIANT),
                
                # Êú¨Êñá„Éó„É¨„Éì„É•„Éº
                ft.Container(
                    content=ft.Text(
                        content_preview,
                        size=14,
                        overflow=ft.TextOverflow.ELLIPSIS,
                        max_lines=3,
                    ),
                    margin=ft.margin.symmetric(vertical=10),
                ),
                
                # „Éï„ÉÉ„Çø„ÉºÈÉ®ÂàÜÔºà„Çø„Ç∞„ÄÅ„É°„Éá„Ç£„Ç¢Ë°®Á§∫Ôºâ
                ft.Row([
                    ft.Row(
                        tag_chips,
                        wrap=True,
                        expand=True,
                    ),
                    media_indicator or ft.Container(),
                ], alignment=ft.MainAxisAlignment.SPACE_BETWEEN),
            ]),
            padding=15,
            on_click=self.on_click,
        )
        
        # „Ç´„Éº„Éâ„ÅÆË®≠ÂÆö
        self.elevation = 2
        self.margin = ft.margin.only(bottom=10)
        self.surface_tint_color = ft.colors.SECONDARY_CONTAINER 